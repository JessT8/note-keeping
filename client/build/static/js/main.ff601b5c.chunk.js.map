{"version":3,"sources":["components/icon/filterOptionIcon.svg","store/actions/actionTypes.js","query/query.js","apolloClient.js","store/actions/noteAction.js","components/TextEditor/SizeOptions.js","components/TextEditor/HighlightOptions.js","components/TextEditor/StyleButton.js","components/TextEditor/Options.js","components/TextEditor/OptionControls.js","components/TextEditor/LinkDecorator.js","components/TextEditor/MediaBlock.js","components/modal/modal.js","components/TextEditor/TextEditor.js","components/modal/fullModal.js","components/error/error.js","store/actions/toggleAction.js","components/error/noteSubmissionError.js","components/note/addNote.js","components/TextEditor/TextConverter.js","components/note/noteDetails.js","components/note/editNote.js","components/note/noteModal.js","components/tag/tagModal.js","components/note/note.js","components/note/notes.js","components/slideDrawer/slideDrawer.js","components/main/home.js","components/main/landingPage.js","components/user/signin.js","store/actions/userAction.js","components/user/signup.js","components/navBar/navBar.js","App.js","serviceWorker.js","store/reducers/notes.js","store/reducers/toggle.js","store/reducers/user.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","LOADING","ERROR","NOTES","gql","ADD_NOTE","UPDATE_NOTE","DELETE_NOTE","ADD_TAG","REMOVE_TAG","SIGN_UP","SIGN_IN","link","createHttpLink","uri","process","SERVER_URI","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","concat","cache","InMemoryCache","loading","state","isLoading","error","getUniqueTags","notes","tags","forEach","note","unique","sort","a","b","str1","name","str2","toLowerCase","tag","Object","values","StyleButton","props","label","option","className","type","styleName","onMouseDown","e","preventDefault","onToggle","value","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","SizeOptions","SIZEOPTIONS","map","opt","i","key","style","href","onClick","HighlightOptions","HIGHLIGHTOPTIONS","OptionControls","Options","OPTIONS","Fragment","decorator","CompositeDecorator","strategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","getType","component","url","getData","target","rel","children","Image","src","alt","Media","media","entity","block","getEntityAt","mediaBlock","editable","modal","createStyles","styles","customStyleFn","TextEditor","useState","setData","completed","toggleModal","action","addLink","setAddLink","EditorState","createEmpty","editorState","setEditorState","selectionState","setSelectionState","editor","useRef","focus","current","onChange","getCurrentContent","JSON","stringify","convertToRaw","useEffect","edit","data","parse","description","convertFromRaw","createWithContent","Entity","create","newEditorState","RichUtils","toggleLink","contentStateWithEntity","createEntity","getLastCreatedEntityKey","set","currentContent","AtomicBlockUtils","insertAtomicBlock","document","activeElement","getSelection","p","remove","selection","removeStyles","getCurrentInlineStyle","reduce","Modifier","removeInlineStyle","removeBlock","setBlockType","push","clear","backgroundColor","toggle","toggleInlineStyle","toggleBlockType","fontSize","placeholder","ref","blockStyleFn","blockRendererFn","MediaBlock","stripPastedStyles","handleKeyCommand","command","newState","Error","toggleNote","dispatch","payload","toggleAddTag","toggleError","NoteSubmissionError","useDispatch","useSelector","errorToggle","clicked","showEdit","clearValues","close","resetClick","AddNote","title","pin","setValues","setClicked","inputRef","required","htmlFor","desc","noteInput","actions","mutate","mutation","queries","variables","then","results","createNote","catch","TextConverter","format","readOnly","mappedBlocks","blocks","text","trim","newText","length","split","getText","NoteDetails","back","parseInt","EditNote","toString","NoteModal","setToggle","TagModal","tagValue","setTagValue","input","tagInput","noteId","result","console","log","Note","noteToggle","addTagToggle","Notes","SlideDrawer","tagFilterClass","filterTag","show","filterNotes","tagClass","Home","toggleDrawer","setToggleDrawer","toggleAddNote","setToggleAddNote","setFilterNotes","setFilterTag","updated","orderBy","setOrderBy","rearrangeNotes","useCallback","n","currentOrder","isOldest","isAlphabetical","isReverse","textA","toUpperCase","textB","idA","idB","query","uniqueTags","filteredNotes","filter","some","t","noteColClass","noteComponent","FilterOptionIcon","for","LandingPage","SignIn","username","password","signedIn","user","history","useHistory","setItem","role","autoComplete","userInput","signIn","SignUp","signUp","err","NavBar","to","data-target","aria-controls","aria-label","clearStore","App","useApolloClient","exact","path","from","Boolean","window","location","hostname","match","initialState","combineReducers","tagFound","actionTypes","noteActions","find","ele","tagCount","noteCopy","indexOf","signinError","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ff601b5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filterOptionIcon.844d9849.svg\";","export const LOADING = 'LOADING';\nexport const GET_NOTES = 'GET_NOTES';\nexport const ADD_NOTE = 'ADD_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const TOGGLE_NOTE = 'TOGGLE_NOTE';\nexport const TOGGLE_ADD_TAG = 'TOGGLE_ADD_TAG';\nexport const TOGGLE_ERROR = 'TOGGLE_ERROR';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const ERROR = 'ERROR';","import { gql } from '@apollo/client';\nexport const NOTES = gql`\n      query{\n        notes{\n          id,\n          title,\n          description,\n          pin,\n          tags{\n            id,\n            name\n          }\n      }\n  }`;\n\nexport const ADD_NOTE = gql`\n   mutation createNote($noteInput:NoteInput!){\n      createNote(\n        noteInput:$noteInput\n        ){\n        id\n    }\n  }\n`;\n\nexport const UPDATE_NOTE = gql`\n   mutation updateNote($id: Float!, $noteInput:NoteInput!){\n      updateNote(id:$id, noteInput:$noteInput){\n        id,\n        description\n      }\n  }\n`;\nexport const DELETE_NOTE = gql`\n   mutation deleteNote($id: Float!){\n      deleteNote(\n        id:$id\n        )}`;\n\nexport const ADD_TAG = gql`\n   mutation addTagsToNote($noteId: Float!, $tagInput: TagInput!){\n      addTagsToNote(\n        noteId:$noteId,\n        tagInput:$tagInput\n        )}`;\n\nexport const REMOVE_TAG = gql`\n   mutation removeTagFromNote($noteId: Float!, $tagInput: TagInput!){\n      removeTagFromNote(\n        noteId:$noteId,\n        tagInput:$tagInput\n        )}`;\nexport const SIGN_UP = gql`\n    mutation SignUp($userInput: UserInput!){\n        signUp(userInput: $userInput)\n  }`;\nexport const SIGN_IN = gql`\n    query SignIn($userInput: UserInput!){\n        signIn(userInput: $userInput)\n  }`;","import {\n    ApolloClient,\n    InMemoryCache\n} from '@apollo/client';\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from '@apollo/client/link/context';\n\nconst link = createHttpLink({ uri: process.env.SERVER_URI});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: new InMemoryCache()\n});","import * as actions from \"./actionTypes\";\nimport * as queries from '../../query/query';\nimport { client } from '../../apolloClient';\n\nexport const getNotes = () => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    client.query({\n        query: queries.NOTES\n    }).then(results=>{\n            const uniqueTags = getUniqueTags(results.data.notes);\n            dispatch({\n                type:actions.GET_NOTES,\n                payload:\n                {\n                    notes: results.data.notes,\n                    tags: uniqueTags,\n                    isLoading: false,\n                }\n            });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                isLoading: false,\n                error: 'Get note unsuccessful'\n            }\n        })\n    })\n}\n\nexport const addNote =  (noteInput) => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    client.mutate({\n        mutation: queries.ADD_NOTE,\n        variables: noteInput\n    }).then(results=>{\n        dispatch({\n            type:actions.ADD_NOTE,\n            payload: {\n                note: {\n                    id:results.data.createNote.id,\n                    ...noteInput.noteInput,\n                    tags:[],\n                    pin:false\n                }\n            }\n      });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                isLoading: false,\n                error: 'Add note unsuccessful'\n            }\n        })\n    })\n}\n\nexport const updateNote = (noteInput) => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    client.mutate({\n        mutation: queries.UPDATE_NOTE,\n        variables: noteInput.variables\n    }).then(()=>{\n        let id = noteInput.variables.id.toString();\n        dispatch({\n            type:actions.UPDATE_NOTE,\n            payload: {id, ...noteInput.variables.noteInput}\n      });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                error:'Update unsuccessful'\n            }\n        })\n    })\n}\nexport const deleteNote = (id) => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    client.mutate({\n        mutation: queries.DELETE_NOTE,\n        variables: {id : parseInt(id)}\n    }).then(()=>{\n        dispatch({\n            type:actions.DELETE_NOTE,\n            payload: {id}\n      });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                error: 'delete note unsuccessful'\n            }\n        })\n    });\n}\nexport const addTag =  (input) => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    const variables = { ...input.variables, noteId: parseInt(input.variables.noteId,10) };\n    client.mutate({\n        mutation: queries.ADD_TAG,\n        variables\n    }).then((result)=>{\n        console.log(result);\n        dispatch({\n            type:actions.ADD_TAG,\n            payload: {\n                id:input.variables.noteId,\n                tag: {\n                    name:input.variables.tagInput.name,\n                    id: input.variables.noteId\n                }\n            }\n        });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                isLoading: false,\n                error: 'Add tag unsuccessful'\n            }\n        })\n    })\n}\nexport const removeTag =  (input) => async (dispatch)=>{\n    dispatch({\n    type: actions.LOADING,\n    });\n    const variables = { ...input.variables, noteId: parseInt(input.variables.noteId,10) };\n    client.mutate({\n        mutation: queries.REMOVE_TAG,\n        variables\n    }).then(()=>{\n        dispatch({\n            type:actions.REMOVE_TAG,\n            payload: {\n                id:input.variables.noteId,\n                name: input.variables.tagInput.name ,\n                isLoading: false\n            }\n        });\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                error: 'remove tag unsuccessful',\n                isLoading: false\n            }\n        })\n    })\n}\nexport const loading = (state) => {\n    return {...state, isLoading: true, error:''}\n}\n\nexport const getUniqueTags = (notes)=>{\n       let tags = []\n       notes.forEach((note)=>{\n            tags = tags.concat(note.tags);\n       });\n       let unique = {}\n       tags.sort((a,b)=>{\n            let str1 = a.name;\n            let str2 = b.name;\n                if(str1.toLowerCase() !== str2.toLowerCase()) {\n                    str1 = str1.toLowerCase();\n                    str2 = str2.toLowerCase();\n                }\n                return str1 > str2 ? 1 : (str1 < str2 ? -1 : 0);\n        }).forEach((tag)=> {\n            if(!unique[tag.name]){\n                unique[tag.name] = tag;\n            }\n        })\n        return Object.values(unique);\n}","export default\n{\n    \"SIZEOPTIONS\":[\n          {\"label\": \"Huge\", \"value\": \"1.73rem\", \"styleName\":\"tool-label\", \"type\":\"fontSize\"},\n          {\"label\": \"Large\", \"value\": \"1.4rem\", \"styleName\":\"tool-label\",\"type\":\"fontSize\"},\n          {\"label\": \"Normal\", \"value\": \"1rem\", \"styleName\":\"tool-label\",\"type\":\"fontSize\"},\n          {\"label\": \"Small\", \"value\": \"0.7rem\", \"styleName\":\"tool-label\",\"type\":\"fontSize\"},\n    ]\n}","export default\n{\n    \"HIGHLIGHTOPTIONS\":[\n          {\"label\":\"◉\", \"value\":\"#FFAB6A\",\"styleName\":\"tool-label\", \"type\":\"highlight\"},\n          {\"label\":\"◉\", \"value\":\"#77ECE8\",\"styleName\":\"tool-label\", \"type\":\"highlight\"},\n          {\"label\":\"◉\", \"value\":\"#69FC00\",\"styleName\":\"tool-label\", \"type\":\"highlight\"},\n          {\"label\":\"◉\", \"value\":\"#FEE715\",\"styleName\":\"tool-label\", \"type\":\"highlight\"},\n          {\"label\":\"◉\", \"value\":\"#FFC7BA\",\"styleName\":\"tool-label\", \"type\":\"highlight\"},\n          {\"label\":\"◉\", \"value\":\"#FFB3FF\",\"styleName\":\"tool-label\", \"type\":\"highlight\"}\n    ]\n}","import React from 'react';\nimport SizeOptions from './SizeOptions';\nimport HighlightOptions from './HighlightOptions';\n\nfunction StyleButton(props){\n        const onToggle = (e) => {\n            e.preventDefault();\n            props.onToggle(props.option.value, props.option.type);\n          };\n          const toggleSize = (value, type) => {\n            props.onToggle(value, type);\n          };\n          const toggleColor = (value, type) => {\n            props.onToggle(value, type);\n          };\n\n          let label = props.option.label;\n          if(props.option.label === 'link'){\n            label = <span className=\"link-icon icon\"></span>\n          }else if(props.option.label === 'image'){\n            label = <span className=\"image-icon icon\"></span>\n          }else if(props.option.label === 'unordered-list-item'){\n            label = <span className=\"ul-icon icon\"></span>\n          }else if(props.option.label === 'text-left'){\n            label = <span className=\"textLeft-icon icon\"></span>\n          }else if(props.option.label === 'text-center'){\n            label = <span className=\"textCenter-icon icon\"></span>\n          }else if(props.option.label === 'text-right'){\n            label = <span className=\"textRight-icon icon\"></span>\n          }else if(props.option.label === 'font-size-dropdown'){\n            label = <span className=\"fontsize-icon icon\"></span>\n          }\n          return (\n            <>\n            {(props.option.type !== 'fontSize' && (props.option.type !== 'highlight') ) &&\n                <span className={`${props.option.styleName} col`} onMouseDown={onToggle}>\n                  {label}\n                </span>}\n             {(props.option.label === 'font-size-dropdown') &&\n                <div className={`${props.option.styleName} col dropdown`}>\n                    <span id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {label}\n                    </span>\n                    <span className=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        {SizeOptions.SIZEOPTIONS.map((opt,i)=>{\n                        return <a key={i} className=\"dropdown-item\" style={{\"fontSize\": opt.value}} href=\"//\"      onClick={(e)=>{\n                                        e.preventDefault();\n                                        toggleSize(opt.value, opt.type)}}>\n                                    {opt.label}\n                                </a>\n                        })}\n                    </span>\n                </div>}\n                {(props.option.label === 'highlight-dropdown') &&\n                <div className={`${props.option.styleName} col dropdown`}>\n                    <span id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i className='fas pt-1'>&#xf591;</i>\n                    </span>\n                    <div className=\"dropdown-menu scrollable-menu dropdown-color\" aria-labelledby=\"dropdownMenuButton\">\n                        {HighlightOptions.HIGHLIGHTOPTIONS.map((opt,i)=>{\n                            return <span key={i} className='color' style={{\"color\": opt.value}} ><a className=\"dropdown-item-color\" style={{\"color\": opt.value}} href=\"//\" onClick={(e)=>{\n                                            e.preventDefault();\n                                            toggleColor(opt.value, opt.type)}}>\n                                        {opt.label}\n                                    </a>\n                                    </span>\n                            })}\n                    </div>\n                </div>}\n            </>\n          );\n}\n\nexport default StyleButton;","export default\n{\n\t\"OPTIONS\":[\n          {\"label\":\"font-size-dropdown\", \"value\": \"\", \"styleName\": \"tool-label\", \"type\":\"fontSize\"},\n          {\"label\":\"U\", \"value\":\"UNDERLINE\",\"styleName\":\"tool-label underline\",\"type\":\"inline\"},\n          {\"label\":\"B\", \"value\":\"BOLD\", \"styleName\":\"tool-label bold\",\"type\":\"inline\"},\n          {\"label\":\"I\", \"value\":\"ITALIC\",\"styleName\":\"tool-label italic\",\"type\":\"inline\"},\n          {\"label\":\"abc\", \"value\":\"STRIKETHROUGH\",\"styleName\":\"tool-label strikethrough\", \"type\":\"inline\"},\n          {\"label\": \"code\", \"value\": \"CODE\", \"styleName\":\"tool-label\",\"type\":\"inline\"},\n          {\"label\": \"unordered-list-item\", \"value\": \"unordered-list-item\", \"styleName\":\"tool-label\",\"type\":\"block\"},\n          {\"label\":\"clear\", \"value\":\"??\",\"styleName\":\"tool-label\", \"type\":\"clear\"},\n          {\"label\":\"text-left\", \"value\":\"TEXT-LEFT\",\"styleName\":\"tool-label\", \"type\":\"align\"},\n          {\"label\":\"text-center\", \"value\":\"TEXT-CENTER\",\"styleName\":\"tool-label\", \"type\":\"align\"},\n          {\"label\":\"text-right\", \"value\":\"TEXT-RIGHT\",\"styleName\":\"tool-label\", \"type\":\"align\"},\n          {\"label\":\"link\", \"value\":\"link\",\"styleName\":\"tool-label\", \"type\":\"link\"},\n          {\"label\":\"image\", \"value\":\"image\",\"styleName\":\"tool-label\", \"type\":\"image\"},\n          {\"label\":\"highlight-dropdown\", \"value\":\"highlight\",\"styleName\":\"tool-label\", \"type\":\"highlight\"}\n\t]\n}","import React from 'react';\nimport StyleButton from './StyleButton';\nimport Options from './Options';\n\nfunction OptionControls (props){\n        return (\n          <div className='textbox-options row no-gutters'>\n            {Options.OPTIONS.map((option,i) =>\n            <React.Fragment key={i}>\n              <StyleButton\n                option={option}\n                onToggle={props.onToggle}\n              />\n            </React.Fragment>\n            )}\n          </div>\n        );\n      };\nexport default OptionControls;","import React from 'react';\nimport {CompositeDecorator} from 'draft-js'\nfunction findLinkEntities(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(\n    (character) => {\n      const entityKey = character.getEntity();\n      return (\n        entityKey !== null &&\n        contentState.getEntity(entityKey).getType() === 'LINK'\n      );\n    },\n    callback\n  );\n}\nconst Link = (props) => {\n  const {url} = props.contentState.getEntity(props.entityKey).getData();\n  return (\n    <a href={url} target='_blank' rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n  );\n}\n\nexport const decorator = new CompositeDecorator([\n  {\n    strategy: findLinkEntities,\n    component: Link,\n  },\n]);","import React from 'react';\nconst Image = props => {\n if (props.src) {\n  return <div className='center'>\n    <img src={props.src} className=\"note-image\" alt={props.src} />\n  </div>\n }\n return null;\n};\nconst Media = props => {\n const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n const { src } = entity.getData();\n const type = entity.getType();\n\n let media;\n\n if (type === \"image\") {\n  media = <Image src={src}  />;\n }\n\n return media;\n};\n\nfunction mediaBlock(block){\n if (block.getType() === \"atomic\") {\n  return {\n   component: Media,\n   editable: false\n  };\n }\n return null;\n};\n\nexport default mediaBlock;","import React from 'react';\nimport './modal.scss';\nfunction modal(props){\n    return <div className=\"note--details\">\n                <div className=\"overlay\">\n                    <div className=\"popup\">\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n}\n\nexport default modal;","import React, {useState, useRef, useEffect} from 'react'\nimport {Editor, EditorState, Modifier, RichUtils, convertToRaw, convertFromRaw, Entity, AtomicBlockUtils} from 'draft-js'\nimport createStyles from 'draft-js-custom-styles';\nimport './TextEditor.scss';\nimport OptionControls from './OptionControls';\nimport {decorator } from './LinkDecorator';\nimport MediaBlock from './MediaBlock';\nimport Modal from '../modal/modal';\nconst {styles, customStyleFn} = createStyles(['font-size', 'font-style', 'font-weight', 'text-decoration', 'text-align', 'background-color'])\n\nfunction TextEditor (props){\n    const [getData, setData] = useState(true);\n    const [addLink, setAddLink] = useState({value:'', completed:true, toggleModal:false, action:''});\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [selectionState, setSelectionState] = useState(null);\n    const editor = useRef(null);\n    const focus = () =>{editor.current.focus();}\n    const onChange = (editorState) => {\n        setEditorState(editorState);\n        const contentState = editorState.getCurrentContent();\n        props.onChange(JSON.stringify(convertToRaw(contentState)));\n    };\n    useEffect(()=>{\n        if(props.edit && getData){\n                const data = JSON.parse(JSON.parse(props.description));\n                const contentState = convertFromRaw(data);\n                const editorState = EditorState.createWithContent(contentState, decorator);\n                setEditorState(editorState);\n                setData(false);\n        }\n    },[getData, props]);\n\n    useEffect(()=>{\n        if(addLink.value !== '' && addLink.completed){\n            if(addLink.action === 'Add Link'){\n                const entity = Entity.create(\"LINK\", \"MUTABLE\", {\n                    url: addLink.value\n                });\n                const newEditorState = RichUtils.toggleLink(editorState, selectionState, entity);\n                setEditorState(newEditorState);\n                setAddLink({...addLink, completed:false, value:'', action:  '' });\n            }else if(addLink.action === 'Add Image Link'){\n                const contentState = editorState.getCurrentContent();\n                const contentStateWithEntity = contentState.createEntity(\n                       \"image\",\n                       \"IMMUTABLE\",\n                       { src: addLink.value }\n                    );\n                const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n                const newEditorState = EditorState.set(\n                    editorState,\n                    { currentContent: contentStateWithEntity },\n                    \"create-entity\"\n                );\n                setEditorState(AtomicBlockUtils.insertAtomicBlock(\n                    newEditorState,\n                    entityKey,\n                    \" \"));\n                setAddLink({...addLink, completed:false, value:'', action:  'Focus' });\n            }\n        }\n        if(editor.current !== document.activeElement && addLink.action === 'Focus'){\n                    focus();\n        }\n\n    },[ addLink , editorState, selectionState]);\n    const clear = () => {\n        const selection = editorState.getSelection()\n        const contentState = editorState.getCurrentContent()\n        const styles = editorState.getCurrentInlineStyle()\n\n        const removeStyles = styles.reduce((state, style) => {\n          return Modifier.removeInlineStyle(state, selection, style) }, contentState)\n\n        const removeBlock = Modifier.setBlockType(removeStyles, selection, 'unstyled')\n\n       setEditorState(EditorState.push(editorState,removeBlock));\n    }\n    const blockStyleFn = (block)=> {\n        switch (block.getType()) {\n            case 'TEXT-CENTER':\n                return 'align-center';\n            case 'TEXT-RIGHT':\n                return 'align-right';\n            default:\n                return null;\n        }\n    }\n    const onToggle = ( value, type )=>{\n        if( type === 'link'){\n            const selectionState = editorState.getSelection();\n            setSelectionState(selectionState);\n            setAddLink({...addLink, toggleModal:true, completed:false, action: \"Add Link\"});\n            return;\n        }\n        if(type === 'image'){\n            setAddLink({...addLink, toggleModal:true, completed:false, action: \"Add Image Link\"});\n            return;\n        }\n        if(type==='align'){\n            onChange(RichUtils.toggleBlockType(editorState, value));\n            return;\n        }\n        if( type=== 'fontSize'){\n            onChange(styles.fontSize.toggle(editorState, value));\n            return;\n        }\n        if(type === 'block'){\n            onChange(RichUtils.toggleBlockType(editorState, value));\n           return;\n        }\n        if( type === 'inline' ){\n            onChange(RichUtils.toggleInlineStyle(editorState, value));\n            return;\n        }\n        if( type === 'clear' ){\n            const properties = ['fontStyle', 'fontWeight', 'textDecoration' ];\n           let newEditorState = editorState;\n            properties.forEach(p =>{\n                newEditorState = styles[p].remove(newEditorState);\n            });\n            clear(newEditorState);\n            return;\n        }\n        if( type === 'highlight' ){\n            onChange(styles.backgroundColor.toggle(editorState, value));\n            return;\n        }\n    }\n            return (\n                <>\n                    <div className='textbox-container'>\n                        <div className='flex-center container-fluid'>\n                            <OptionControls\n                                editorState={editorState}\n                                onToggle={onToggle}\n                            />\n                        </div>\n                        <div className='textbox-editor' onClick={focus}>\n                            <Editor\n                              editorState={editorState}\n                              onChange={onChange}\n                              placeholder=\"Write your notes here...\"\n                              ref={editor}\n                              customStyleFn={customStyleFn}\n                              blockStyleFn={blockStyleFn}\n                              blockRendererFn={MediaBlock}\n                              stripPastedStyles={true}\n                              handleKeyCommand={(command) => {\n                                  let newState = RichUtils.handleKeyCommand(editorState, command)\n                                  if (newState) {\n                                    onChange(newState)\n                                    return \"handled\"\n                                  }\n                                  return \"not-handled\"\n                                }}\n                            />\n                        </div>\n                    </div>\n                    {addLink.toggleModal && <Modal>\n                    <button className=\"close\"\n                            onClick={()=>{\n                                setAddLink({...addLink, value:'', toggleModal:false, action:  ''})\n                            }}>\n                            &#10005;\n                    </button>\n                    <h3 className=\"text-center pb-3\">{addLink.action}</h3>\n                    <div className=\"form-group \">\n                        <input className=\"form-control\"\n                               value={addLink.value}\n                               onChange={(e)=>{\n                                    setAddLink({...addLink, value:e.target.value});\n                                }}\n                        />\n                    </div>\n                    <button className=\"btn btn-primary\"\n                            onClick={()=>{\n                                setAddLink({...addLink, completed:true, toggleModal:false});\n                            }}\n                            >Add Link</button>\n                    </Modal>}\n                </>);\n            }\n\nexport default TextEditor;","import React from 'react';\nimport './modal.scss';\n\nfunction modal(props){\n    return <div className=\"fullscreen-popup\">\n                {props.children}\n            </div>\n}\n\nexport default modal;","import React from 'react';\nimport './error.scss';\n\nfunction Error(){\n    return (\n        <>\n            <div className=\"justify-content-center\">\n                <div className=\"my-auto\">\n                    <div className=\"row pt-5 mt-5\">\n                        <div className='col'>\n                            <div className=\"face mx-auto\">\n                                <div className=\"eye\"></div>\n                                <div className=\"eye right\"></div>\n                                <div className=\"mouth sad\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row  h-75 pt-5\">\n                        <div className='col  justify-content-center'>\n                            <p className=\"error-font text-center nunito-font\">\n                            Opps...Something went wrong...\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n        )\n}\n\nexport default Error;","import * as actions from \"./actionTypes\";\n\nexport const toggleNote = (toggleNote) => async (dispatch)=>{\n    dispatch({\n        type:actions.TOGGLE_NOTE,\n        payload:\n        {\n            toggleNote,\n            toggleAddTag: ''\n        }\n  });\n}\n\nexport const toggleAddTag = (toggleAddTag) => async (dispatch)=>{\n    dispatch({\n        type:actions.TOGGLE_NOTE,\n        payload:\n        {\n            toggleNote: '',\n            toggleAddTag\n        }\n  });\n}\n\nexport const toggleError = (toggleError) => async (dispatch)=>{\n    dispatch({\n        type:actions.TOGGLE_ERROR,\n        payload:\n        {\n            toggleNote: '',\n            toggleAddTag: '',\n            toggleError\n        }\n  });\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './error.scss';\nimport Error from './error';\nimport Modal from '../modal/modal';\nimport { toggleError } from '../../store/actions/toggleAction';\n\nfunction NoteSubmissionError(props){\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state=> state.notes.isLoading);\n    const error = useSelector(state=>state.notes.error);\n    const errorToggle = useSelector(state=>state.toggle.toggleError);\n    useEffect(()=>{\n        if(!isLoading && props.clicked){\n            if(!error){\n                if(props.edit){\n                    props.showEdit();\n                }else{\n                    props.clearValues();\n                    props.close();\n                }\n                dispatch(toggleError(false));\n            }\n            else{\n                dispatch(toggleError(true));\n            }\n            props.resetClick();\n        }\n    },[isLoading, error, dispatch, props]);\n    if(!errorToggle){\n        return <></>;\n    }\n    return (\n        <Modal>\n            <button className=\"close\"\n                        onClick={()=>{dispatch(toggleError(false))\n                    }}>\n                &#10005;\n            </button>\n            <Error/>\n        </Modal>\n        )\n}\n\nexport default NoteSubmissionError;","import React, { useState , useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { addNote } from '../../store/actions/noteAction';\nimport TextEditor from '../TextEditor/TextEditor'\nimport FullModal from '../modal/fullModal';\nimport NoteSubmissionError from '../error/noteSubmissionError';\n\nfunction AddNote(props) {\n    const [values, setValues] = useState({id:\"\", title:\"\", description:\"\", pin:false });\n    const [clicked, setClicked] = useState(false);\n    const dispatch = useDispatch();\n    const inputRef = useRef(null);\n\n    return  <FullModal>\n                <button className=\"back button-link\"\n                        onClick={()=>{props.close();}}>\n                     &larr;\n                </button>\n                <div className=\"content\">\n                    <form>\n                        <div className=\"form__group_popup mx-auto\">\n                            <input\n                                id=\"title\"\n                                name=\"title\"\n                                className=\"form__field\"\n                                value={values.title}\n                                placeholder=\"Title\"\n                                onChange={(e)=>{setValues({...values, \"title\":e.target.value})}}\n                                ref={inputRef}\n                                required=\"required\"\n                            />\n                            <label\n                                htmlFor=\"title\"\n                                className=\"form__label\"\n                                >\n                                Title\n                            </label>\n                        </div>\n                        <div className=\" form__group_popup mx-auto\">\n                            <TextEditor\n                            onChange={(desc)=>{setValues({...values, \"description\":JSON.stringify(desc)})}}/>\n                        </div>\n                        <div className=\"flex-center\">\n                            <button className=\"btn btn-primary\"\n                                    type=\"button\"\n                                    onClick={ ()=>{\n                                    if(values.title){\n                                       dispatch(addNote({noteInput: { title: values.title, description: values.description , pin:values.pin} }));\n                                        setClicked(true);\n                                    }else{\n                                        inputRef.current.focus();\n                                    }}\n                                    }>\n                                Add\n                            </button>\n                        </div>\n                    </form>\n                </div>\n               { <NoteSubmissionError clicked={clicked} close={props.close} clearValues={()=>{setValues({title:'', description:''})}} resetClick={()=>{setClicked(false)}}/> }\n            </FullModal>\n}\n\nexport default AddNote;","import React , {useEffect, useState}from \"react\";\nimport {Editor, EditorState, convertToRaw, convertFromRaw }from 'draft-js'\nimport createStyles from 'draft-js-custom-styles';\nimport {decorator } from './LinkDecorator';\nimport MediaBlock from './MediaBlock';\n\nconst {customStyleFn} = createStyles(['font-size', 'font-style', 'font-weight', 'text-decoration', 'background-color'])\n\nfunction TextConverter(props){\n    const [ editorState, setEditorState ] = useState(EditorState.createEmpty());\n\n    function getText(){\n       const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\n       const mappedBlocks = blocks.map(\n          block => (!block.text.trim() && \"\\n\") || block.text\n        );\n\n        let newText = \"\";\n        for (let i = 0; i < mappedBlocks.length; i++) {\n          const block = mappedBlocks[i];\n          if (i === mappedBlocks.length - 1) {\n            newText += block;\n          } else {\n            if (block === \"\\n\") newText += block;\n            else newText += block + \"\\n\";\n          }\n        }\n        const lines = newText.split('\\n')\n        const firstLine = lines[0].trim() + '...';\n        return firstLine;\n    }\n    useEffect(()=>{\n        const data = JSON.parse(JSON.parse(props.description));\n        const contentState = convertFromRaw(data);\n        let editorState = EditorState.createWithContent(contentState, decorator);\n        setEditorState(editorState);\n    },[props.description]);\n\n    function blockStyleFn(block) {\n        switch (block.getType()) {\n            case 'TEXT-CENTER':\n                return 'align-center';\n            case 'TEXT-RIGHT':\n                return 'align-right';\n            default:\n                return null;\n        }\n    }\n    return (\n      <div>\n        {props.format ? <Editor editorState={editorState} readOnly={true}  customStyleFn={customStyleFn} blockRendererFn={MediaBlock} blockStyleFn={blockStyleFn}/> : getText()}\n      </div>\n    );\n}\n\nexport default TextConverter;","import React from 'react';\nimport TextConverter from '../TextEditor/TextConverter';\nimport { useDispatch } from 'react-redux'\nimport { deleteNote } from '../../store/actions/noteAction';\nimport FullModal from '../modal/fullModal';\n\nfunction NoteDetails(props) {\n    const dispatch = useDispatch();\n    return (\n        <FullModal>\n            <button className=\"back button-link\"\n                    onClick={()=>{props.back();}}>\n                    &larr;\n            </button>\n            <div>\n                <div>\n                    <div className=\"d-flex justify-content-center mt-3\">\n                        <h1>{props.values.title}</h1>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col d-flex justify-content-center mt-\">\n                            <button className=\"button-link mx-2\"\n                                    onClick={()=>{\n                                        props.showEdit();\n                                    }}>\n                                    Edit\n                            </button> |\n                            <button className=\"button-link mx-2\"\n                                    onClick={() => {\n                                        dispatch(deleteNote(props.values.id))\n                                    }}>\n                                    Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"details--description mt-3 mx-auto\">\n                    <TextConverter description={props.values.description}\n                                   format={true}/>\n                </div>\n            </div>\n        </FullModal>\n    )\n}\n\nexport default NoteDetails;","import React, { useState, useRef } from \"react\";\nimport { updateNote } from '../../store/actions/noteAction';\nimport { useDispatch } from 'react-redux';\nimport TextEditor  from '../TextEditor/TextEditor';\nimport FullModal from '../modal/fullModal';\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport NoteSubmissionError from '../error/noteSubmissionError';\n\nfunction EditNote(props) {\n    const [values, setValues] = useState(props.values);\n    const [clicked, setClicked] = useState(false);\n    const dispatch = useDispatch();\n    const inputRef = useRef(null);\n\n    return  <FullModal>\n                <div className=\"mt-5\">\n                    <button className=\"back button-link\"\n                       onClick={()=>{props.showEdit()}}>\n                        &larr;\n                    </button>\n                    <div className=\"content\">\n                        <div className=\"form__group_popup mx-auto\">\n                            <input\n                                id=\"title\"\n                                name=\"title\"\n                                className=\"form__field\"\n                                value={values.title}\n                                placeholder=\"Title\"\n                                ref={inputRef}\n                                onChange={(e)=>{setValues({...values, \"title\":e.target.value})}}\n                            />\n                            <label\n                                htmlFor=\"title\"\n                                className=\"form__label nunito-font\"\n                                >\n                                Title\n                            </label>\n                        </div>\n                        <div className=\" form__group_popup mx-auto\">\n                            <TextEditor\n                                description={values.description} onChange={(desc)=>{setValues({...values, \"description\":JSON.stringify(desc)})}}\n                                edit={true}\n                             />\n                        </div>\n                        <div className=\"flex-center\">\n                            <button className=\"btn btn-primary\"\n                                    onClick={()=>{\n                                        if(values.title){\n                                            if(props.values.title !== values.title || props.values.description!== values.description){\n                                              dispatch(updateNote({variables: { id:parseInt(values.id,10), noteInput:{title:values.title, description: values.description, pin: values.pin}}}))\n                                            }\n                                            setClicked(true);\n                                        }else{\n                                            inputRef.current.focus();\n                                        }\n                                    }\n                                    }>\n                                         Save\n                             </button>\n                        </div>\n                    </div>\n                </div>\n                { <NoteSubmissionError clicked={clicked} close={props.close} clearValues={()=>{setValues({title:'', description:''})}} resetClick={()=>{setClicked(false)}} showEdit={props.showEdit}/>}\n            </FullModal>\n}\n\nexport default EditNote;","import React, { useState } from 'react';\nimport NoteDetails from './noteDetails';\nimport EditNote from './editNote';\nimport { useDispatch } from 'react-redux'\nimport { toggleNote } from '../../store/actions/toggleAction';\n\nfunction NoteModal(props) {\n    const [toggle , setToggle ] = useState(false);\n    const dispatch = useDispatch();\n    return (\n        <div className=\"note--details\">\n            {!toggle ? <NoteDetails back={()=>{ dispatch(toggleNote(''))}}\n                             values={props.values}\n                             showEdit={()=>{setToggle(true)}}\n                             />\n                        : <EditNote showEdit={()=>{\n                                                 setToggle(false);\n                                                }}\n                                    values={props.values}/>\n            }\n        </div>)\n}\nexport default NoteModal;","import React, { useState } from 'react';\nimport './tagModal.scss';\nimport Modal from '../modal/modal';\nimport { useDispatch } from 'react-redux';\nimport { addTag, removeTag } from '../../store/actions/noteAction';\nimport { toggleAddTag } from '../../store/actions/toggleAction';\n\nfunction TagModal(props) {\n    const [ tagValue, setTagValue ] = useState('');\n    const dispatch = useDispatch();\n    return  <Modal>\n                <button className=\"close\"\n                    onClick={()=>{dispatch(toggleAddTag(''))}}>\n                &#10005;\n                </button>\n                <h3 className=\"text-center\">Tags</h3>\n                <p className=\"text-center pb-1\">{props.values.title}</p>\n                <div className=\"form-group \">\n                    <input className=\"form-control\"\n                        value={tagValue}\n                        onChange={(e)=>{\n                            setTagValue(e.target.value)\n                        }}\n                    />\n                </div>\n                <button className=\"btn btn-primary\"\n                    onClick={()=>{\n                        if(tagValue){\n                            dispatch(addTag({variables:{tagInput:{name:tagValue}, noteId:props.values.id}}));\n                            setTagValue('');\n                        }\n                    }}\n                    >Add Tags\n                </button>\n                <div className='mt-3 d-flex flex-row flex-wrap'>\n                {props.tags.map((tag,i)=>(\n                   <span key={i} className=\"badge badge-secondary px-2 py-1 text-truncate mr-1 my-2 \"><span>{tag.name}</span><a href=\"!#\" onClick={(e)=>{\n                        e.preventDefault();\n                        dispatch(removeTag({variables:{tagInput:{name:tag.name}, noteId:props.values.id}}));\n                   }} className=\"pl-1\">&#10005;</a></span>\n                ))\n                }\n                </div>\n                </Modal>\n}\n\nexport default TagModal;","import React from 'react';\nimport NoteModal from \"./noteModal\";\nimport TagModal from \"../tag/tagModal\";\nimport './note.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleNote, toggleAddTag } from '../../store/actions/toggleAction';\n\nfunction Note(props){\n    const dispatch = useDispatch();\n    const noteToggle = useSelector( state => state.toggle.toggleNote);\n    const addTagToggle = useSelector( state => state.toggle.toggleAddTag);\n\n    return (\n        <div className=\"card border-0 pt-2 col-12 col-md-6 col-lg-4 col-xl-4 \">\n            <div className=\"card-body note-label\">\n                <div>\n                    <a href=\"/\"\n                       className=\"note-label-btn\"\n                       onClick={(e)=>{\n                            e.preventDefault();\n                            dispatch(toggleNote(props.note.id));\n                          }}\n                        >\n                        <h3 className=\"card-title text-center pt-2\">\n                        {props.note.title}\n                        </h3>\n                    </a>\n                </div>\n                <div className=\"note-content d-flex flex-row-reverse\">\n                    <a  href=\"!#\"\n                        onClick={(e)=>{\n                            e.preventDefault();\n                            dispatch(toggleAddTag(props.note.id));\n                        }}>\n                        <span className=\"addTagOption addTag-icon\"></span>\n                     </a>\n                </div>\n            </div>\n            {(noteToggle === props.note.id) && <NoteModal values={props.note}/>}\n            {(addTagToggle === props.note.id) && <TagModal\n                                       tags={props.note.tags}\n                                       values={props.note}\n                                       />}\n        </div>\n    )\n}\n\nexport default Note;","import React from \"react\";\nimport Note from \"./note\";\n\nfunction Notes(props) {\n    const notes = props.notes.map((note)=>{\n        return  (<React.Fragment key={note.id}>\n                    <Note note={note}/>\n                </React.Fragment>);\n        });\n    return <div className=\"container\">\n            <div className=\"row\">\n                    {notes}\n                </div>\n            </div>}\nexport default Notes;","import React from 'react';\nimport './slideDrawer.css';\nimport { useSelector } from 'react-redux'\nfunction SlideDrawer(props){\n       const tags = useSelector( state => state.notes.tags);\n\n       let tagFilterClass = \"tag-filter\"\n       if(props.filterTag === ''){\n            tagFilterClass = \"currentTag\"\n       }\n       return(\n          <>\n          {props.show ?\n            <div className=\"side-drawer col-3\">\n            <hr/>\n             <a href=\"\\\\\" className={tagFilterClass} onClick={(e)=>{\n                    e.preventDefault();\n                    if(props.filterTag !==\"\"){\n                    props.filterNotes(\"\");}}}>\n                    <h4 className=\"ml-3 mb-3\">All</h4>\n            </a>\n             <h4 className=\"ml-3 mb-3\">Tags</h4>\n             {tags.map((tag , i) =>{\n                let tagClass = \"tag-filter\";\n                if(props.filterTag === tag.name){\n                    tagClass = \"currentTag\"\n                }\n                return (<a key={i} href=\"\\\\\" className={tagClass} onClick={(e)=>{\n                    e.preventDefault();\n                    if(props.filterTag !== tag.name){\n                        props.filterNotes(tag.name);\n                    }\n                }}><p className=\"ml-3 mb-2\" >{tag.name}</p></a>)}\n             )}</div>:''}\n          </>)\n}\n\nexport default SlideDrawer;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getNotes } from '../../store/actions/noteAction';\nimport AddNote from \"../note/addNote\";\nimport Notes from \"../note/notes\"\nimport Error from '../error/error';\nimport FilterOptionIcon from '../icon/filterOptionIcon.svg'\nimport SlideDrawer from '../slideDrawer/slideDrawer'\nimport '../../App.css';\nimport '../../styles.scss';\n\nfunction Home(props) {\n    const [toggleDrawer, setToggleDrawer] = useState(false);\n    const [toggleAddNote, setToggleAddNote] = useState(false);\n    const [filterNotes, setFilterNotes] = useState([]);\n    const [filterTag, setFilterTag] = useState('');\n    const [orderBy, setOrderBy] = useState({value:'', updated:true});\n\n    const notes = useSelector( state => state.notes.notes);\n    const isLoading = useSelector( state => state.notes.isLoading);\n    const error = useSelector( state => state.notes.error);\n    const dispatch = useDispatch();\n\n    //takes in notes and rearrange them\n    const rearrangeNotes = useCallback(n => {\n        const currentOrder = orderBy.value;\n        const isOldest = (currentOrder === 'Oldest');\n        const isAlphabetical =  (currentOrder === 'A-Z');\n        const isReverse =  (currentOrder === 'Z-A');\n        return n.sort((a,b)=>{\n            if( isAlphabetical || isReverse ){\n                let textA = a.title.toUpperCase();\n                let textB = b.title.toUpperCase();\n                if( isReverse ){\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }else{\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                }\n            }\n            let idA = parseInt(a.id);\n            let idB = parseInt(b.id);\n            if(isOldest){\n                return (idA < idB) ? -1 : (idA > idB) ? 1 : 0;\n            }\n            return (idA > idB) ? -1 : (idA < idB) ? 1 : 0;\n        })\n    }, [orderBy.value]);\n\n    useEffect(() => {\n        dispatch(getNotes());\n    }, [dispatch])\n\n    //filter notes by tags and rearrange them\n    useEffect(()=>{\n        if(!isLoading){\n            if(filterTag !== ''){\n                const filteredNotes = notes.filter((note)=>\n                    note.tags.some(t => t.name === filterTag));\n                    if(filteredNotes.length !== 0){\n                        setFilterNotes(rearrangeNotes(filteredNotes));\n                    }else{\n                        setFilterTag('');\n                    }\n            }else{\n                setFilterNotes(rearrangeNotes([...notes]));\n            }\n        }\n    }, [filterTag, notes, isLoading, rearrangeNotes])\n\n    //fires when drop-down list value changes and rearrange notes\n    useEffect(()=>{\n        if(!orderBy.updated){\n            const n = [...filterNotes];\n            setFilterNotes(rearrangeNotes(n));\n            setOrderBy( {...orderBy, updated: true} );\n        }\n    },[orderBy, filterNotes, rearrangeNotes])\n\n    let noteColClass = \"col\"\n    if(toggleDrawer) {\n        noteColClass = 'col-9'\n    };\n    const noteComponent = (filterNotes.length) ? <Notes notes={filterNotes}/> :<div className=\"container-fluid w-100 h-100\">\n        <div className=\"row h-75 p-5\">\n            <div className=\"my-5 p-5 \">\n                <p className=\"big-font text-center cinzel-font\">Currently no notes</p>\n            </div>\n        </div>\n        </div>;\n\n    return (\n        <div className=\"mt-5\">\n            <div className=\"container-fluid\">\n                <div className=\"App-main\">\n                    <header className=\"pt-5\">\n                        <h1 className=\"nunito-font\">My notes</h1>{ (error) ? '':\n                        <button className=\"toggleAdd\"\n                                onClick={()=>{setToggleAddNote(true)}}>\n                                +\n                        </button>}\n                    </header>\n                    {toggleAddNote && <AddNote close={()=>setToggleAddNote(false)}/>}\n                    <div className=\"container\">\n                        <div className=\"row no-gutters mt-3\">\n                            <div className=\"gear col-md-3 col-sm-12\">\n                                <button className=\"gear-btn ml-5\"\n                                        onClick={()=>{setToggleDrawer(!toggleDrawer)}}>\n                                        <img src={FilterOptionIcon} alt=\"gear\"/>\n                                        <span className=\"mx-1\">Filter</span>\n                                </button>\n                            </div>\n                            <div className=\"col-md-5 ml-5\">\n                                <label className=\"mr-3\" for=\"orderBy-select\">Order by:</label>\n                                <select className=\"orderBy\" id=\"orderBy-select\" onChange={(e)=>{setOrderBy({value:e.target.value, updated:false})}}>\n                                    <option value=\"Default\">Newest to Oldest</option>\n                                    <option value=\"Oldest\">Oldest to Newest</option>\n                                    <option value=\"A-Z\">A-Z</option>\n                                    <option value=\"Z-A\">Z-A</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    {(!isLoading && !error) ?\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <SlideDrawer show={toggleDrawer}\n                                         filterNotes={(tag)=>{setFilterTag(tag)}}\n                                         filterTag={filterTag}\n                                         close={()=>setToggleDrawer(false)}/>\n                            <div className={noteColClass}>\n                                {noteComponent}\n                            </div>\n                        </div>\n                    </div> : (error) ? <Error/> : 'Loading'}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport '../../App.css';\nimport '../../styles.scss';\n\nfunction LandingPage() {\n  return (\n    <div className=\"container-fluid position-fixed h-100 w-100 bg-light\">\n        <div className=\"row justify-content-center h-75 fade-in\">\n            <div className=\"my-auto\">\n                <p className=\"big-font text-center cinzel-font\">Write your notes!</p>\n                <h4 className=\"text-center\">A quick and easy way for you to access all your notes</h4>\n                <div className=\"text-right pt-5 started-font\"><a  href=\"/signin\">Get Started &rarr;</a></div>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default LandingPage;","import React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signIn } from '../../store/actions/userAction';\n\nfunction SignIn(props) {\n    const [values, setValues] = useState({username:'', password:''});\n    const signedIn = useSelector( state => state.user.signedIn);\n    const error = useSelector( state => state.user.error);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(()=>{\n        if(signedIn){\n            localStorage.setItem(\"user\",  values.username);\n            history.push('/');\n        }\n    },[signedIn, history, values]);\n\n    return (\n       <div className=\"container-fluid position-fixed h-100 w-100 bg-light\">\n            <div className=\"row h-75 justify-content-center\">\n                <div className=\"col-5 rounded border  pt-4 pb-5 pl-5 pr-5 mt-5 bg-white my-auto\">\n                    <form>\n                        <div className=\"text-center mb-4\">\n                            <h2 className=\"nunito-font\">Sign In</h2>\n                        </div>\n                        {(error === 'SIGNIN_ERROR') ? <div className=\"alert alert-danger\" role=\"alert\">Invalid username or password</div> : ''}\n                        <div className=\"form-group \">\n                            <input className=\"form-control\"\n                                   id=\"username\"\n                                   placeholder=\"Username\"\n                                   value={values.username}\n                                   onChange={e=>{setValues({...values,\"username\":e.target.value})}}\n                                   />\n                        </div>\n                        <div className=\"form-group\">\n                           <input type=\"password\"\n                                   className=\"form-control\"\n                                   id=\"password\"\n                                   name=\"password\"\n                                   placeholder=\"Password\"\n                                   value={values.password}\n                                   autoComplete='on'\n                                   onChange={e=>{setValues({...values,\"password\":e.target.value})}}\n                            />\n                        </div>\n                        <div className=\"text-right\">\n                            <button type=\"submit\"\n                                    className=\"btn btn-primary\"\n                                    onClick={(e)=>{\n                                        e.preventDefault();\n                                        if(values.username && values.password){\n                                         dispatch(signIn({variables:{userInput:{username:values.username, password:values.password}}}));\n                                        }else{\n\n                                        }\n                                     }\n                                    }\n                                    >\n                                    Sign in &rarr;\n                            </button>\n                        </div>\n                        <hr/>\n                        <div className=\"text-center mb-4\">\n                            <p className=\"text-muted\">Don't have an account yet? Click <a href=\"/signup\">here</a> to register</p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n  );\n}\n\nexport default SignIn;","import * as actions from \"./actionTypes\";\nimport * as queries from '../../query/query';\nimport { client } from '../../apolloClient';\n\nexport const signIn = (userInput) => async (dispatch)=>{\n    dispatch({\n        type: actions.LOADING,\n    });\n    client.mutate({\n        mutation: queries.SIGN_IN,\n        variables: userInput.variables\n    }).then(results=>{\n            localStorage.setItem(\"token\",  results.data.signIn);\n            dispatch({\n                type:actions.SIGN_IN,\n                payload:\n                {\n                    user:userInput.variables.userInput.username,\n                    signedIn:true,\n                    error: '',\n                }\n            })\n    }).catch(()=>{\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                error: 'SIGNIN_ERROR',\n            }\n        })\n    })\n}\n\nexport const signUp = (userInput) => async (dispatch)=>{\n    dispatch({\n        type: actions.LOADING,\n    });\n    client.mutate({\n        mutation: queries.SIGN_UP,\n        variables: userInput.variables\n    }).then(results=>{\n            localStorage.setItem(\"token\",  results.data.signUp);\n            dispatch({\n                type:actions.SIGN_UP,\n                payload:\n                {\n                    user:userInput.variables.userInput.username,\n                    error: '',\n                    signedIn:true\n                }\n            })\n    }).catch((err)=>{\n        console.log(err);\n        dispatch({\n            type: actions.ERROR,\n            payload:{\n                error: 'SIGNUP_ERROR',\n            }\n        })\n    })\n}\n\nexport const signOut = () => (dispatch)=>{\n    dispatch({\n        type:actions.SIGN_OUT,\n        payload:\n        {\n            user:'',\n            loading:false,\n            signedIn:false,\n            error:''\n        }\n  });\n}","import React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUp } from '../../store/actions/userAction';\n\nfunction SignUp() {\n    const [values, setValues] = useState({username:'', password:''});\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const error = useSelector( state => state.user.error);\n    const signIn = useSelector( state => state.user.signedIn);\n\n    useEffect(()=>{\n        if(signIn){\n            localStorage.setItem(\"user\",  values.username);\n            history.push('/');\n        }\n    }, [signIn, history, values.username ])\n  return (\n    <div className=\"container-fluid position-fixed h-100 w-100 bg-light\">\n        <div className=\"row h-75 justify-content-center\">\n            <div className=\"col-5 rounded border pt-4 pb-5 pl-5 pr-5 mt-5 bg-white my-auto\">\n                <form>\n                    <div className=\"text-center mb-4\">\n                        <h2 className=\"nunito-font\">Sign Up</h2>\n                    </div>\n                    {(error === 'SIGNUP_ERROR') ? <div className=\"alert-danger alert \" role=\"alert\">Username is taken</div>:''}\n                    <div className=\"form-group\">\n                        <input className=\"form-control\"\n                               id=\"username\"\n                               placeholder=\"Username\"\n                               value={values.username}\n                               onChange={e=>{setValues({...values,\"username\":e.target.value})}}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"password\"\n                               className=\"form-control\"\n                               id=\"password\"\n                               name=\"password\"\n                               placeholder=\"Password\"\n                               autoComplete=\"off\"\n                               value={values.password}\n                               onChange={e=>{setValues({...values,\"password\":e.target.value})}}\n                        />\n                    </div>\n                    <div className=\"text-right\">\n                        <button type=\"submit\"\n                                className=\"btn btn-primary\"\n                                onClick={(e)=>{\n                                    e.preventDefault();\n                                    dispatch(signUp({variables:{userInput:{username:values.username, password:values.password}}}));\n                                    }\n                                }\n                            >\n                                Sign up &rarr;\n                        </button>\n                    </div>\n                    <hr/>\n                    <div className=\"text-center mb-4\">\n                        <p className=\"text-muted\">Already have an account? Click <a href=\"/signin\">here</a> to sign in</p>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default SignUp;","import React from 'react';\nimport '../../App.css';\nimport '../../styles.scss';\nimport { Link } from \"react-router-dom\";\nimport { useDispatch} from 'react-redux';\nimport { signOut } from '../../store/actions/userAction';\nimport { useHistory } from \"react-router-dom\";\n\nfunction NavBar(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    return (\n        <nav className=\"fixed-top navbar navbar-expand-lg bg-dark navbar-dark\" id=\"navBar\">\n            <Link className=\"navbar-brand cinzel-font pl-5\" to=\"/\">Notekeeper</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navContent\" aria-controls=\"navContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navContent\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item ml-3\" >\n                        <Link className=\"nunito-font navLink text-white\" to=\"/\">Home</Link>\n                    </li>\n                    <li className=\"nav-item ml-3\">\n                      {(!localStorage.getItem('token') && !props.user)?\n                      <Link className=\"nunito-font navLink text-white\"\n                            to=\"/signin\">Sign in</Link> :\n                      <button className=\"button-link navLink nunito-font text-white\"\n                         onClick={()=> {\n                                localStorage.clear();\n                                props.client.clearStore();\n                                dispatch(signOut());\n                                history.push('/');\n                            }}>\n                            Sign Out</button>\n                        }\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport './styles.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Home from './components/main/home';\nimport LandingPage from './components/main/landingPage';\nimport SignIn from './components/user/signin';\nimport SignUp from './components/user/signup';\nimport { useApolloClient } from '@apollo/client'\nimport { useSelector } from 'react-redux';\nimport NavBar from './components/navBar/navBar';\n\nfunction App(props) {\n    const client = useApolloClient();\n    const user = useSelector( state => state.user.user);\n  return (\n    <Router>\n            <NavBar user={user} client={client}/>\n            <Switch>\n                <Route exact path=\"/\">\n                    { (localStorage.getItem('token') || user) ? <Home props={props} client={client}/>  : <LandingPage/> }\n                </Route>\n                <Route exact path=\"/signin\">\n                 {!localStorage.getItem('token') ?\n                    <SignIn /> : <Redirect exact from='/signin' to='/'/>}\n                </Route>\n                <Route exact path=\"/signup\">\n                   {!localStorage.getItem('token') ? <SignUp /> : <Redirect exact from='/signup' to='/'/>}\n                </Route>\n            </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport * as noteActions from '../actions/noteAction';\n\nlet initialState = {\n    notes: [],\n    isLoading: true,\n    error: '',\n    tags: [],\n}\nexport default function noteReducer(state = initialState, action){\n    let notes, note, tagFound, tags;\n    switch(action.type){\n        case actionTypes.LOADING:\n            return noteActions.loading(state);\n        case actionTypes.GET_NOTES:\n            return {...state = action.payload }\n        case actionTypes.ADD_NOTE:\n            return {\n                ...state,\n                notes:[action.payload.note, ...state.notes],\n                isLoading:false,\n                error:''\n            }\n        case actionTypes.UPDATE_NOTE:\n            notes =  state.notes.map((note) => {\n                if(note.id === action.payload.id){\n                    return ({...note}=action.payload);\n                }\n                return note;\n            });\n            return {\n                ...state,\n                notes,\n                isLoading:false\n            }\n        case actionTypes.DELETE_NOTE:\n            notes = state.notes.filter((note) => note.id !== action.payload.id);\n            return {\n                ...state,\n                tags: noteActions.getUniqueTags(notes),\n                notes,\n                isLoading: false,\n                error: '',\n            };\n        case actionTypes.REMOVE_TAG:\n            note = state.notes.find( ele => ele.id === action.payload.id);\n            let tagCount = 0;\n            notes = state.notes.map((n)=> {\n                if(n.tags.some(tag=> tag.name === action.payload.name)){\n                    tagCount+=1;\n                }\n                if(n.id === note.id){\n                    let noteCopy = {...n};\n                    noteCopy.tags = noteCopy.tags.filter((t)=>t.name!==action.payload.name);\n                    return noteCopy;\n                }\n                return n;\n            })\n            tags = (tagCount <= 1) ? state.tags.filter((t)=>t.name!==action.payload.name) : state.tags;\n\n            return {\n                ...state,\n                notes,\n                tags,\n                isLoading:false,\n                error: ''\n            };\n        case actionTypes.ADD_TAG:\n            note = state.notes.find( ele => ele.id === action.payload.id);\n            tagFound = false;\n            notes = state.notes.map((n)=> {\n                if(n.tags.indexOf(action.payload.tag)){\n                    tagFound = true;\n                }\n                if(n.id === note.id){\n                    let noteCopy = {...n};\n                    noteCopy.tags = [...noteCopy.tags, action.payload.tag]\n                    return noteCopy;\n                }\n                return n;\n            })\n            tags = tagFound ? noteActions.getUniqueTags(notes) : state.tags;\n            return {\n                ...state,\n                notes,\n                tags,\n                isLoading:false,\n                error:''\n            };\n         case actionTypes.ERROR:\n            return { ...state = action.payload}\n        default:\n            return state;\n    }\n}","import * as actionTypes from \"../actions/actionTypes\";\n\nlet initialState = {\n    toggleNote: '',\n    toggleAddTag: '',\n    toggleError: false\n}\nexport default function toggleReducer(state = initialState, action){\n    switch(action.type){\n        case actionTypes.TOGGLE_NOTE:\n            return ({...state} = action.payload);\n        case actionTypes.TOGGLE_ADD_TAG:\n            return ({...state} = action.payload);\n        case actionTypes.TOGGLE_ERROR:\n            return ({...state} = action.payload);\n        default:\n            return state;\n    }\n}","import * as actionTypes from \"../actions/actionTypes\";\n\nlet initialState = {\n    user:'',\n    loading:'',\n    signedIn:false,\n    error: ''\n}\nexport default function noteReducer(state = initialState, action){\n    switch(action.type){\n        case actionTypes.LOADING:\n            return {...state,\n                    loading:false,\n                    signinError: ''}\n        case actionTypes.SIGN_IN:\n            return ({...state} = action.payload);\n        case actionTypes.SIGN_UP:\n            return ({...state} = action.payload);\n        case actionTypes.SIGN_OUT:\n            return ({...state} = action.payload);\n        case actionTypes.ERROR:\n            return ({...state} = action.payload);\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport notes from \"./notes\";\nimport toggle from \"./toggle\";\nimport user from \"./user\";\n\nexport default combineReducers({\n    notes,\n    toggle,\n    user\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from '@apollo/client';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux';\nimport rootReducer  from \"./store/reducers/rootReducer\";\nimport { client } from './apolloClient';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n   <ApolloProvider client={client}>\n   <Provider store={store}>\n    <App />\n    </Provider>\n   </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}